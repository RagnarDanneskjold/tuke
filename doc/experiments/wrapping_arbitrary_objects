#!/usr/bin/python
# vim: tabstop=4 expandtab shiftwidth=4 fileencoding=utf8
# ### BOILERPLATE ###
# Tuke - Electrical Design Automation toolset
# Copyright (C) 2008 Peter Todd <pete@petertodd.org>
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
# ### BOILERPLATE ###


"""
What happens when you wrap arbitrary objects?

Like strings? Numbers?
"""

class getattribute_proxy(object):
    """__getattribute__ version of the proxy.

    Just uses __getattribute__ to intercept everything, pretty simple.

    Unexpectedly isinstance works directly, in both the isinstance(proxy) and
    isinstance(element) cases. isinstance must first do a low-level check of
    the object, and if that fails, then actually call __getattribute__
    """

    def __init__(self,obj):
       self._obj = obj

    def __getattribute__(self_real,n):
        print '__getattribute__',n
        self = lambda n: object.__getattribute__(self_real,n)

        obj = self('_obj')

        if n == '_obj':
            return obj
        else:
            return getattr(obj,n)

    def __setattr__(self,n,v):
        print '__setattr__',n,v
        if n in ('__class__','_obj'):
            object.__setattr__(self,n,v)
        else:
            setattr(object.__getattribute__(self,'_obj'),n,v)


p = getattribute_proxy('foo')

# print p + 'asfd'
#
# Doesn't work, gives:
#
# TypeError: unsupported operand type(s) for +: 'getattribute_proxy' and 'str'

p = getattribute_proxy(10)

# print p + 10
#
# Also doesn't work:
#
# TypeError: unsupported operand type(s) for +: 'getattribute_proxy' and 'int'

# Well that was instructive now wasn't it? :)
